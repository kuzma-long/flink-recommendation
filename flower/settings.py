"""
Django settings for flower project.

Generated by 'django-admin startproject' using Django 1.11.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'oslelx$$r8eoftsb05)0e(pvopa9+e%20g5noa+f9i#m2zfm#k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin', # 管理员站点
    'django.contrib.auth',  # 认证授权系统
    'django.contrib.contenttypes',  # 内容类型框架
    'django.contrib.sessions',  # 会话框架
    'django.contrib.messages',  # 消息框架
    'django.contrib.staticfiles',   # 管理静态文件的框架
    # 这是allauth的依赖包，必须在app和allauth之前
    'django.contrib.sites',

    'shop',
    # 用户user
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'flower.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'flower.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
    # 'default': { #使用mysql数据库注释上面这一段然后打开这里的注释，并且把mysql数据库账号密码填上去
    #    'ENGINE': 'django.db.backends.mysql',
    #    'NAME': 'traffic',
    #    'USER':'root',
    #    'PASSWORD':'123456',
    #        # 'HOST':'',#本机不需要加host和port,默认host为127.0.0.1，port端口默认为3306
    #        # 'PORT':'',
    #     'CONN_MAX_AGE':None,
    #    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/imgs')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

AUTH_USER_MODEL = "shop.Users"

ACCONUT_AUTHENTICATION_METHOD = 'username_email'  # 可以使用用户名和邮箱登录
# ACCONUT_EMAIL_REQUIRED = True
ACCONUT_EMAIL_VERIFICATION = 'none'  # 是否强制邮箱验证optional是可选 none是否

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

LOGIN_REDIRECT_URL = '/'  # 登录成功后跳转
ACCONUT_LOGOUT_REDIRECT_URL = '/accounts/login/'  # 退出登录后跳转

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
ACCOUNT_EMAIL_REQUIRED = False
EMAIL_HOST = 'smtp.qq.com'  #
EMAIL_PORT = 465
EMAIL_HOST_USER = '2691034920@qq.com'  # 或者'
EMAIL_HOST_PASSWORD = 'yglqfzsjjtxbdgea'  # 邮箱密码
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = '2691034920@qq.com'
ACCOUNT_LOGOUT_ON_GET = True
